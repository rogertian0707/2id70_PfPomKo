SELECT Courses.CourseName,CourseRegistrations_passed.Grade FROM Degrees, StudentRegistrationsToDegrees,CourseRegistrations_passed,CourseOffers,Courses WHERE StudentRegistrationsToDegrees.StudentID = %1% AND Degrees.DegreeId = %2% AND StudentRegistrationsToDegrees.DegreeId = Degrees.DegreeId AND CourseRegistrations_passed.StudentRegistrationId = StudentRegistrationsToDegrees.StudentRegistrationId AND CourseRegistrations_passed.CourseOfferId = CourseOffers.CourseOfferId AND Courses.CourseId = CourseOffers.CourseId ORDER BY CourseOffers.year, CourseOffers.quartile,CourseRegistrations_passed.CourseOfferId;
SELECT 0;
SELECT sr_to_deg.degreeid AS degreeid, CAST(1.0*COUNT(case when students.gender='F' then 1 end)/COUNT(*) AS FLOAT) AS percentage FROM studentregistrationstodegrees as sr_to_deg, active, students WHERE active.studentregistrationid = sr_to_deg.studentregistrationid AND sr_to_deg.studentid = students.studentid GROUP BY sr_to_deg.degreeid ORDER BY sr_to_deg.degreeid;
SELECT CAST((SELECT COUNT(*) FROM students, degrees, studentregistrationstodegrees WHERE students.gender = 'F' AND degrees.dept = %1% AND studentregistrationstodegrees.DegreeId = degrees.DegreeId AND studentregistrationstodegrees.StudentId = students.StudentId) AS FLOAT) / CAST((SELECT COUNT(*) FROM students, degrees, studentregistrationstodegrees WHERE degrees.dept = %1% AND studentregistrationstodegrees.DegreeId = degrees.DegreeId AND studentregistrationstodegrees.StudentId = students.StudentId) AS FLOAT);
SELECT 0;
SELECT * FROM (SELECT good_student.sid, count(good_student.good_grades) as good_times FROM good_student GROUP BY good_student.sid) AS result WHERE result.good_times >=%1% ORDER BY sid;
SELECT 0;
SELECT courseName, year, quartile FROM courses as c, courseoffers as co, (SELECT * FROM courses_with_no_assistants UNION ALL SELECT s.courseOfferId FROM students_per_courseoffer as s, assistants_per_courseoffer as a WHERE s.courseofferid = a.courseofferid AND a.assistants*50 < s.students) AS target WHERE target.courseofferid = co.courseofferid AND c.courseid = co.courseid ORDER BY co.courseofferid;
